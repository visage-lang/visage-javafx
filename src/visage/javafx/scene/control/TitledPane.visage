/*
 * Copyright (c) 2010-2011, Visage Project
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Neither the name Visage nor the names of its contributors may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package visage.javafx.scene.control;
import visage.javafx.scene.Node;
/** 
 * <p> A TitledPane is a panel with a title that can be opened and closed. </p>
 * 
 * @author Shiv Kumar Ganesh <gshiv.sk@gmail.com>
 */

public class TitledPane extends Labeled {
    override def wrappedNode = javafx.scene.control.TitledPane {}
    public-read def wrappedTitledPane = bind wrappedNode as javafx.scene.control.TitledPane;
    
    
    /**
     * <p>The animated state of the TitledPane.</p>
     **/ 
    public var animated:Boolean on replace oldValue{
        if(isInitialized(this) or not oldValue){
            wrappedTitledPane.setAnimated(animated);
        }
    }
    
    /**
     * <p>The collapsible state of the TitledPane.</p>
     **/ 
    public var collapsible:Boolean = true on replace oldValue{
        if(isInitialized(this) or not oldValue){
            wrappedTitledPane.setCollapsible(collapsible);
        }
    }    
    
    /**
     * <p>The content of the TitledPane.</p>
     **/ 
 public var content:Node on replace{
        if(isInitialized(this) or content !=null){
            wrappedTitledPane.setContent(content.wrappedNode);
        }
    }
   
     /**
     * <p> The expanded state of the TitledPane.</p>
     **/ 
public var expanded:Boolean on replace oldValue{
	if(isInitialized(this) or not oldValue)
	{
	wrappedTitledPane.setExpanded(expanded);
	}
   }

}

